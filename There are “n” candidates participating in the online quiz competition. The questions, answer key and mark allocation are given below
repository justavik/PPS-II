ansKey = {1: "A", 2: "B", 3: "B", 4: "A", 5: "C"}
keys = list(ansKey.values())
candidateResponses = dict()
candidateOrder = []
marksToCandidateDict = dict()

def getMarks(numberOfCandidates):
   for x in range(0, numberOfCandidates):
       a = list(map(str, input().strip().split()))[:5]
       mks = 0
       for i in range(0, 5):
           if a[i] == keys[i]:
               mks += 2
           elif a[i] == "X":
               continue
           else:
               mks -= 0.25
       candidateResponses.update({x + 1: mks})

def displayRank():
   print("Rank \t Candidates \t Total")
   for k in range(1, len(mksPerCandidate) + 1):
       print(str(k) + "\t \t" + str(newCandidateOrder[k - 1]) + "\t \t \t" + str(mksPerCandidate[k - 1]))

getMarks(int(input()))

for key, value in candidateResponses.items():
   marksToCandidateDict.setdefault(value, list()).append(key)

mksPerCandidate = list(marksToCandidateDict.keys())
mksPerCandidate.sort(reverse=True)

for j in mksPerCandidate:
   candidateOrder.append(marksToCandidateDict[j])

OuterList = []
for i in candidateOrder:
   InnerList = []
   for j in i:
       j = "C" + str(j)
       InnerList.append(j)
   OuterList.append(InnerList)

newCandidateOrder = []
for i in OuterList:
   x = ",".join(i)
   newCandidateOrder.append(x)

displayRank()
